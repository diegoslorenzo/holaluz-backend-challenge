# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Resgisters all classes in src/Service automatically
    App\Application\:
        resource: '../src/Application'
        exclude: '../src/Application/{Kernel.php}'


    # ReaderService gets a collection of readers injected by tag
    App\Application\ReaderService:
        arguments:
            $readers: !tagged_iterator { tag: 'app.reader' }
    # Registers the adapters as services with the tag "app.reader"
    App\Infrastructure\Reader\CSVReader:
        tags: ['app.reader']
    App\Infrastructure\Reader\XMLReader:
        tags: ['app.reader']
    App\Infrastructure\Reader\TXTReader: # New adapter without modifying ReaderService
        tags: ['app.reader']
    App\Infrastructure\Reader\JSONReader: # New adapter without modifying ReaderService
        tags: ['app.reader']
    
    # # Factory: Alternative approach using a factory to retrieve readers
    # # ReaderService gets a collection of readers injected by factory
    # App\Application\ReaderService:
    #     arguments:
    #         $readers: '@App\Infrastructure\Reader\Factory\ReaderFactory'
    # App\Infrastructure\Reader\Factory\ReaderFactory:
    #     factory: ['App\Infrastructure\Reader\Factory\ReaderFactory', 'getReaders']
    # # end Factory